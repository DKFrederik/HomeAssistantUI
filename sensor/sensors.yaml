- platform: unifigateway
  host: !secret unifi_host
  username: !secret unifi_username
  password: !secret unifi_password
  monitored_conditions:
    - www
    - wlan
    - alerts
    - firmware


#################################################################################################################
#                                                                                                               #
#                                                   Travis                                                      #
#                                                                                                               #
#################################################################################################################
# travis (don't know wich kind of sensor this is... maby binary?)
- platform: travisci
  api_key: !secret github_token

#################################################################################################################
#                                                                                                               #
#                                            Installed version                                                  #
#                                                                                                               #
#################################################################################################################
- platform: command_line
  name: Current Version
  command: "cat /config/.HA_VERSION"
#================================

#################################################################################################################
#                                                                                                               #
#                                       Lasetes stable version on github                                        #
#                                                                                                               #
#################################################################################################################
- platform: version

- platform: rest
  resource: https://api.github.com/repos/home-assistant/home-assistant/releases/latest
  username: !secret github_username
  password: !secret github_password
  authentication: basic
  value_template: '{{ value_json.tag_name }}'
  headers:
    Accept: application/vnd.github.v3+json
    Content-Type: application/json
    User-Agent: Home Assistant REST sensor
  name: Lastest Release

#################################################################################################################
#                                                                                                               #
#                                               SYSTEM MONITOR                                                  #
#                                                                                                               #
#################################################################################################################

#https://home-assistant.io/components/sensor.systemmonitor/
- platform: systemmonitor
  resources:
    - type: memory_use_percent
    - type: processor_use
    - type: load_1m
    - type: load_5m
    - type: load_15m
    - type: last_boot
    - type: disk_use_percent
      arg: /home
    - type: disk_free
      arg: /home
    - type: disk_use
      arg: /home

#################################################################################################################
#                                                                                                               #
#                                            External IP of Server                                              #
#                                                                                                               #
#################################################################################################################

- platform: rest
  resource: https://api.ipify.org?format=json
  name: External IP
  value_template: '{{ value_json.ip }}'

#################################################################################################################
#                                                                                                               #
#                                           Internal IP of Server                                               #
#                                                                                                               #
#################################################################################################################
- platform: command_line
  name: internal docker ip
  command: "hostname -i"

#################################################################################################################
#                                                                                                               #
#                                             CPU temp of Server                                                #
#                                                                                                               #
#################################################################################################################
- platform: command_line
  name: CPU Temp
  command: "cat /sys/class/thermal/thermal_zone0/temp"
  unit_of_measurement: "°C"
  value_template: '{{ value | multiply(0.001) | round(2)  }}'

#################################################################################################################
#                                                                                                               #
#                     MQTT extracting Wavin current temperatur from all the topics                              #
#                                                                                                               #
#################################################################################################################
  # 
- platform: mqtt
  #Added for unique id so icons can be added from the UI
  unique_id: lillewcfordørvarmeID
  name: "LilleWCFordoer"
  state_topic: "heat/floor807D3A790941/0/current"
  #Added for graph view
  unit_of_measurement: °C
- platform: mqtt
  #Added for unique id so icons can be added from the UI
  unique_id: bryggersvarmeID
  name: "BryggersVarme"
  state_topic: "heat/floor807D3A790941/1/current"
  #Added for graph view
  unit_of_measurement: °C
- platform: mqtt
  #Added for unique id so icons can be added from the UI
  unique_id: køkkenvarmeID
  name: "KøkkenVarme"
  state_topic: "heat/floor807D3A790941/2/current"
  #Added for graph view
  unit_of_measurement: °C
- platform: mqtt
  #Added for unique id so icons can be added from the UI
  unique_id: storwcvarmeID
  name: "StorWCVarme"
  state_topic: "heat/floor807D3A790941/3/current"
  #Added for graph view
  unit_of_measurement: °C
- platform: mqtt
  #Added for unique id so icons can be added from the UI
  unique_id: gangvarmeID
  name: "GangVarme"
  state_topic: "heat/floor807D3A790941/4/current"
  #Added for graph view
  unit_of_measurement: °C
- platform: mqtt
  #Added for unique id so icons can be added from the UI
  unique_id: tristansvarmeID
  name: "TristansVarme"
  state_topic: "heat/floor807D3A790941/5/current"
  #Added for graph view
  unit_of_measurement: °C

###############################################################################################################################
#                                                                                                                             #
#                                             RaspBerry Pi 3b+ (Phoscon)                                                      #
#                                                                                                                             #
###############################################################################################################################


###############################################################################################################################
#    check temperature on Phoscon Raspberry pi3b+                                                                             #
#                                                                                                                             #
#    Remember to ssh-keygen and ssh-copy-id from server to Phoscon from within the virtual enviroment (venv)                  #
#                                                                                                                             #
#                                                                                                                             #
#    Create the homeassistant user on the second RPI, sudo adduser homeassistant                                              #
#                                                                                                                             #
#    I generated RSA keys, and copied them from HA to the second RPI, was using this                                          #
#    site, http://www.thegeekstuff.com/2008/11/3-steps-to-perform-ssh-login-without-password-using-ssh-keygen-ssh-copy-id     #
#    If i didn’t do this step is asked for password when i try to log on to the Second RPI from HA.                           #
#                                                                                                                             #
#    Added this to my sensor.yaml on HA:                                                                                      #
#                                                                                                                             #
#  - platform: command_line                                                                                                   #
#    name: Phoscon CPU Temperature                                                                                            #
#    command: ssh "Second RPI IP" "cat /sys/class/thermal/thermal_zone0/temp"                                                 #
#    unit_of_measurement: "°C"                                                                                                #
#    value_template: '{{ value | multiply(0.001) }}'                                                                          #
#                                                                                                                             #
###############################################################################################################################
# - platform: command_line
#   name: Phoscon CPU Temperature
#   command: ssh 'homeassistant@192.168.3.10' 'cat /sys/class/thermal/thermal_zone0/temp'
#   unit_of_measurement: "°C"
#   value_template: '{{ value | multiply(0.001) }}'

#################################################################################################################
#     First, make sure you can ssh into the remote server without password:                                     #
#     create a script with the correct username and ip-adress                                                   #
#                                                                                                               #
#     eg. pico chechPhosconDiskUsage.sh                                                                         #
#     Then paste this text:                                                                                     #
#                                                                                                               #
#     #!/bin/sh                                                                                                 #
#     ssh homeassistant@192.168.3.10 "df -lh --output=used / | tail -n 1 | sed 's/,//g'"                        #
#     Then go to sed to remove the "G" to show only the numbered value,                                         #
#     then put in unit_of_measurement: and value_template in this funcktion                                     #
#                                                                                                               #
#     make it executable: chmod 755                                                                             #
#                                                                                                               #
#################################################################################################################
# - platform: command_line
#   name: Phoscon disk usage
#   unit_of_measurement: "GiB"
#   value_template: '{{ value | multiply(0.001) }}'
#   command: "local/scripts/checkPhosconDiskUsage.sh"

#################################################################################################################
#     First, make sure you can ssh into the remote server without password:                                     #
#     create a script with the correct username and ip-adress                                                   #
#                                                                                                               #
#     eg. pico chechPhosconDiskFree.sh                                                                          #
#     Then paste this text:                                                                                     #
#                                                                                                               #
#     #!/bin/sh                                                                                                 #
#     ssh homeassistant@192.168.3.10 "df -lh --output=avail / | tail -n 1 | sed 's/,//g'"                       #
#     Then go to sed to remove the "G" to show only the numbered value,                                         #
#     then put in unit_of_measurement: and value_template in this funcktion                                     #
#                                                                                                               #
#     make it executable: chmod 755                                                                             #
#                                                                                                               #
#################################################################################################################

# - platform: command_line
#   name: Phoscon disk free
#   command: "/config/www/scripts/checkPhosconDiskFree.sh"
#   unit_of_measurement: "GiB"
#   value_template: '{{ value }}'

#################################################################################################################
#                                                                                                               #
#       #!/bin/sh                                                                                               #
#       ssh homeassistant@192.168.3.10 uptime | grep -ohe 'up .*' | sed 's/,//g' | awk '{ print $2 }'           #
#                                                                                                               #
#       First ssh into Raspberry pi 3b+ (phoscon)                                                               #
#       Then take the output of uptime to grep, only show matching characters (-oh) and do regex (-e).          #
#       Filter on "up" "space" "everything after that".                                                         #
#       Then go to sed to remove the comma's "4 days," to "4 days",                                             #
#       and then with awk print the second collumn, and remove the rest of the output.                          #
#                                                                                                               #
#################################################################################################################

# - platform: command_line
#   name: Phoscon Uptime
#   # command: "/home/homeassistant/checkUptime.sh"
#   command: "/config/www/scripts/checkUptime.sh"
#   unit_of_measurement: ""
#   value_template: '{{ value | multiply(0.001) }}'

#################################################################################################################
#                                                                                                               #
#                                             Vaskemaskine                                                      #
#                                                                                                               #
#################################################################################################################

- platform: template
  sensors: 
    vaskemaskine_tid_tilbage:
      value_template: '{{ states.sensor.vaskemaskine.attributes.remain_time }}'
      icon_template: >-
          {% if is_state('sun.sun', 'above_horizon') %}
            mdi:timelapse
          {% else %}
            mdi:timelapse
          {% endif %}

- platform: template
  sensors: 
    vaskemaskine_hvad_laver_den:
      value_template: '{{ states.sensor.vaskemaskine.attributes.run_state }}'
      icon_template: >-
          {% if is_state('sun.sun', 'above_horizon') %}
            mdi:form-select
          {% else %}
            mdi:form-select
          {% endif %}

- platform: template
  sensors: 
    vaskemaskine_oprindelig_tid:
      value_template: '{{ states.sensor.vaskemaskine.attributes.initial_time }}'
      icon_template: >-
          {% if is_state('sun.sun', 'above_horizon') %}
            mdi:timelapse
          {% else %}
            mdi:timelapse
          {% endif %}

- platform: template
  sensors: 
    vaskemaskine_boernelaas:
      value_template: '{{ states.sensor.vaskemaskine.attributes.childlock_mode }}'
      icon_template: >-
          {% if is_state('sun.sun', 'above_horizon') %}
            mdi:lock-open-outline
          {% else %}
            mdi:lock-open-outline
          {% endif %}

- platform: template
  sensors: 
    vaskemaskine_program:
      value_template: '{{ states.sensor.vaskemaskine.attributes.current_course }}'
      icon_template: >-
          {% if is_state('sun.sun', 'above_horizon') %}
            mdi:form-select
          {% else %}
            mdi:form-select
          {% endif %} 

#################################################################################################################
#                                                                                                               #
#                                               Darksky                                                         #
#                                                                                                               #
#################################################################################################################

# - platform: darksky
#   api_key: !secret darksky
#   forecast:
#     - 0
#     - 1
#     - 2
#     - 3
#     - 4
#     - 5
#     - 6
#     - 7
#   monitored_conditions:
#     - icon
#     - summary
#     - nearest_storm_distance
#     - nearest_storm_bearing
#     - humidity
#     - temperature
#     - temperature_high
#     - temperature_low
#     - apparent_temperature
#     - apparent_temperature_high
#     - apparent_temperature_low
#     - wind_speed
#     - wind_bearing
#     - precip_type
#     - precip_probability
#     - precip_accumulation
#     - precip_intensity
#     - precip_intensity_max
#     - uv_index
#     - daily_summary
#     - pressure
#     - visibility
#   scan_interval:
#     days: 0
#     hours: 0
#     minutes: 5
#     seconds: 30
#     milliseconds: 0

#################################################################################################################
#                                                                                                               #
#                                              Weather                                                          #
#                                                                                                               #
#################################################################################################################

- platform: template
  sensors:
    weather_temperature:
      unit_of_measurement: 'degrees'
      value_template: "{{ state_attr('weather.aeblevangen', 'temperature') }}"

#################################################################################################################
#                                                                                                               #
#                                           Eloverblik                                                          #
#                                    Take the date from the sensor                                              #
#                                                                                                               #
#################################################################################################################

- platform: template
  sensors:
    eloverblikdato:
      friendly_name: "Eloverblikdato"
      unit_of_measurement: 'date'
      value_template: "{{ state_attr('sensor.eloverblik_energy_total', 'Metering date') }}"

- platform: template
  sensors:
    eloverblikdato:
      friendly_name: "Eloverblikdato"
      # unit_of_measurement: 'date'
      value_template: "{{ state_attr('weather.aeblevangen', 'condition') }}"